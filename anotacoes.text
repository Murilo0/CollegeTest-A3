// Início do código e entrada dos dados //

Primeiro, a falta da class main para iniciar o código é um erro claro, além da falta da importação do Scanner que estaria sendo utilizado no mesmo, também
importaremos o util de List e de Arrays para facilitar nossa vida.

Segundo, identificamos aqui que as variáveis estão sendo criadas logo após a entrada de dados, para evitarmos problemas futuros e por boas práticas,
criaremos essas variáveis anteriormente.

Terceiro, foi identificado que o usuário poderia fazer um estouro de buffer caso utilizasse um número grande demais ou caracteres inválidos nos inputs. 
Portanto lidaremos com isso com o método try catch em todas as entradas, juntamente com um loop para forçar o usuário a utilizar uma entrada válida de 
dados. Para, concluirmos esse passo, criaremos uma lista com as operações possíveis para verificar se o usuário entrou com uma operação válida, assim 
evitando erros e exceções no nosso código.

Assim como criaremos métodos acima no nosso código para validação dos valores como, verificar se o valor é decimal, verificar se realmente é um binário
dentre outras coisas. Também criaremos as funções para lidar com as operações aritméticas com os valores binários, como conversores para inteiros para a
operação ser realizada.

E aqui a maior parte do trabalho já foi feita.

// Processamento dos dados

Depois disso chegamos na parte em que utilizaremos nossos dados para algum propósito, nesse caso, contas matemáticas, aqui podemos também facilitar 
a leitura e manutenção do código criando métodos para calcular e retornar valores precisos, também criaremos um tradutor da nossa resposta do cálculo para 
binário, esse tradutor também saberá se a resposta é negativa e adicionará um "-" caso seja. Então, quando formos calcular algo é apenas chamar
o método de tradução seguido pelo de cálculo assim nos retornará o valor calculado em binário. 

Por exemplo: convertToBinaryString(calcule(valor1, tipo_operacao, valor2))

// Saída das informações

Agora é só criar uma mensagem para exibir a operação e seu respectivo resultado, para isso usaremos uma formatação para manter o código mais limpo.

E é isso! Nosso código está seguro contra possíveis usuários buscadores de erros! Haha
